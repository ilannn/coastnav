{"version":3,"sources":["models/steps.js","models/extras.js","models/addons.js","services/GeoService.js","side/editor/StepEditorFormContainer.jsx","side/editor/ExtraEditorFormContainer.jsx","side/editor/Editor.js","map/drawkit/Drawkit.jsx","map/steps/extras/navExtra.js","map/steps/extras/RangeExtra.jsx","map/steps/extras/DRExtra.jsx","map/steps/navStep/navStep.js","map/steps/navStep/GuidelineStep.jsx","map/steps/navStep/TBStep.jsx","map/steps/navStep/CogStep.jsx","map/steps/navStep/CrntStep.jsx","map/steps/navStep/TCStep.jsx","map/steps/extras/FixExtra.jsx","map/steps/extras/RadiusExtra.jsx","map/MapView.js","App.js","serviceWorker.js","index.js"],"names":["StepType","Object","freeze","GUIDELINE","Symbol","TB","COG","CRNT","TC","ExtraType","FIX","R","AddonType","RNG","DR","MIN_FIELD_STEP_TYPES","DEAFULT_ADDON_DATA","percentage","position","time","Date","type","length","GeoService","_this","this","classCallCheck","getSteps","limit","createNewStep","lat","arguments","undefined","lng","stepType","newStep","id","positions","marker","includes","objectSpread","isAddon","addonData","createNewSnappedItem","itemType","zoomLevel","options","nearestPoint","getNearestPosition","description","createNewExtra","newItem","oldStep","oldStepPolyline","differences","filter","k","_","isEqual","updatedStep","assign","calcNewEnding","from","angle","p2","geolib","computeDestinationPoint","LatLng","latitude","toFixed","longitude","to","calcAngle","getDistanceSimple","ignoreOptions","flattenDeep","map","option","flatten","findIndex","isEmpty","findNearest","isNaN","distance","key","toMeters","formatCoordinate","coord","decimal2sexagesimal","_unused","console","error","unformatCoordinate","sexagesimal2decimal","p1","direction","lat1","Math","PI","lat2","lng1","lng2","y","sin","cos","x","atan2","calcDistance","dist","convertUnit","unit","StepEditorFormContainer","state","values","getValuesFromProps","props","handleCoordinatesChange","e","target","name","Number","value","warn","apply","toConsumableArray","setState","handleCoordinatesSwitch","reverse","handleAngleChange","handleLengthChange","handleTypeChange","handleMarkerChange","handleTimeChange","m","toDate","handleAddonMarkerChange","getAddonLength","handleAddonTimeChange","handleAddonTypeChange","handleAddonLangthChange","handleAddonSwitch","getUpdatedMarker","calcNewMarkerPosition","handleSubmit","preventDefault","handleAddonSubmit","onSave","log","getAddonValues","addonValues","stepPositions","getStepLength","prevProps","react_default","a","createElement","className","onSubmit","StepEditorFormContainer_CoordinatesInput","title","handleChange","index_es","onClick","style","transform","display","StepEditorFormContainer_TypeInput","StepEditorFormContainer_AngleInput","StepEditorFormContainer_LengthInput","StepEditorFormContainer_TimeInput","StepEditorFormContainer_MarkerInput","StepEditorFormContainer_AddonSwitchInput","StepEditorFormContainer_AddonInput","handlePositionChange","variant","color","onDelete","PureComponent","CoordinatesInput","htmlFor","children","onChange","placeholder","AngleInput","LengthInput","TypeInput","inputProps","MarkerInput","lab_index_es","TimeInput","material_ui_pickers_esm","utils","MomentUtils","ampm","AddonSwitchInput","checked","AddonInput","ExtraEditorFormContainer_CoordinatesInput","ExtraEditorFormContainer_TypeInput","ExtraEditorFormContainer_TimeInput","ExtraEditorFormContainer_LengthInput","Editor","changes","item","editorContent","side_editor_StepEditorFormContainer","ExtraEditorFormContainer","Component","drawkitStepTools","acronyms","matIcon","dashArray","drawkitExtrasTools","Drawkit","stepTools","getDrawkitTools","extrasTools","onClearAll","tools","tool","index","selectedClass","selectedTool","divider","concat","toLocaleLowerCase","onSelectTool","archIcon","L","icon","iconUrl","iconSize","iconAnchor","pointIcon","rangeExtraProps","navExtra","RangeExtra","moment","format","rotationAngle","addTo","bindTooltip","permanent","offset","isNorth","drExtraProps","DRExtra","emptyIcon","singleArrowIcon","doubleArrowIcon","tripleArrowIcon","getAddon","guidelineProps","guidelineMarkerProps","navStep","GuidelineStep","step","polyline","_GeoService$calcDista","getLatLngs","markerPosition","getCenter","addon","tbStepProps","width","tbMarkerProps","TBStep","cogStepProps","cogMarkerProps","CogStep","crntStepProps","crntMarkerProps","CrntStep","tcStepProps","tcMarkerProps","TCStep","fixExtraProps","FixExtra","RadiusExtra","radius","circle","geoService","initialCenter","MapView","possibleConstructorReturn","getPrototypeOf","call","leafletMap","leafletSteps","leafletExtras","steps","extras","selectedItem","draw","isDrawing","snapping","setLeafletMapRef","leafletElement","onSnappingSwitch","eraseExtras","eraseSteps","unSelectItem","eraseItems","escFunction","bind","assertThisInitialized","document","addEventListener","on","onMapClick","setMousePosition","drawStateSteps","removeEventListener","prevState","drawStateExtras","Map","ref","center","zoom","zoomControl","maxZoom","minZoom","animate","onMouseMove","onDrawingMove","TileLayer","attribution","url","control_default","src","alt","map_drawkit_Drawkit","side_editor_Editor","onStepChange","editorOnChange","handleSelectedItemChanges","handleEditorDelete","control","mousePosition","lngFormatter","latFormatter","drawExtras","_this2","forEach","_createNewExtra","each","extraOnClickListener","extraLayer","extraOnClick","event","itemOnClick","drawSteps","_this3","_createNewStep","stepOnClickListener","stepLayer","stepOnClick","collection","references","originalEvent","view","DomEvent","stopPropagation","clickedItemId","findKey","itemLayers","indexOf","selectItem","find","_this4","mapValues","navItem","layer","removeLayer","keyCode","handleEscPress","handleStepEsc","handleExtrasEsc","remove","extra","handleStepDrawing","hendleExtrasDrawing","_this5","updatedSteps","updatedSelectedStep","latlng","_this6","updatedExtras","updatedSelectedItem","distanceTo","handleStepStopDraw","handleExtrasStopDraw","handleStepStartDraw","handleExtrasDraw","getZoom","newExtra","currentPositions","updatedStepEnding","slice","itemId","updatedItem","collectionType","updatedCollection","updatedState","changedItem","deletedStepId","handleRemoveStep","App","isInitial","handleClose","handleShow","src_map_MapView","Modal_default","show","onHide","Header","closeButton","Title","Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85f23bcc.chunk.js","sourcesContent":["\r\nexport const StepType = Object.freeze({\r\n    GUIDELINE:   Symbol(\"GUIDELINE\"),\r\n    TB:  Symbol(\"TB\"),\r\n    COG: Symbol(\"COG\"),\r\n    CRNT: Symbol(\"CRNT\"),\r\n    TC: Symbol(\"TC\"),\r\n});","export const ExtraType = Object.freeze({\r\n    FIX: Symbol(\"FIX\"),\r\n    R:   Symbol(\"R\"),\r\n});","export const AddonType = Object.freeze({\r\n    RNG: Symbol(\"RNG\"),\r\n    DR:  Symbol(\"DR\"),\r\n});","import { StepType } from '../models/steps';\r\nimport geolib from 'geolib';\r\nimport { LatLng } from 'leaflet';\r\nimport _ from 'lodash';\r\nimport { ExtraType } from '../models/extras';\r\nimport { AddonType } from '../models/addons';\r\n\r\nexport const MIN_FIELD_STEP_TYPES = ['GUIDELINE'];\r\nexport const DEAFULT_MARKER_POSITION = 50;\r\nexport const DEAFULT_ADDON_DATA = {\r\n    percentage: 70,\r\n    position: null,\r\n    time: new Date(),\r\n    type: AddonType.RNG,\r\n    length: 0,\r\n}\r\n\r\nexport default class GeoService {\r\n    constructor() {\r\n        this.id = 0;\r\n    }\r\n\r\n    getSteps = (limit) => {\r\n        return [];\r\n    }\r\n\r\n    createNewStep = (lat = 0, lng = 0, stepType = StepType.GUIDELINE) => {\r\n        let newStep = {\r\n            id: ++this.id, type: stepType,\r\n            positions: [{ lat, lng }, { lat, lng }],\r\n            marker: { position: null, percentage: 50 }\r\n        }\r\n        \r\n        if (MIN_FIELD_STEP_TYPES.includes(stepType)) return newStep;\r\n\r\n        return {\r\n            ...newStep,\r\n            time: new Date(),\r\n            isAddon: false,\r\n            addonData: { ...DEAFULT_ADDON_DATA },\r\n        }\r\n    }\r\n\r\n    createNewSnappedItem = (lat = 0, lng = 0, itemType, zoomLevel, options = []) => {\r\n        const nearestPoint = GeoService.getNearestPosition(\r\n            { lat, lng }, options, zoomLevel\r\n        );\r\n        return StepType[itemType.description]\r\n            ? this.createNewStep(nearestPoint.lat, nearestPoint.lng, itemType)\r\n            : this.createNewExtra(nearestPoint.lat, nearestPoint.lng, itemType);\r\n    }\r\n\r\n    createNewExtra = (lat = 0, lng = 0, itemType = ExtraType.RNG) => {\r\n        let newItem = {\r\n            id: this.id++, type: itemType,\r\n            position: { lat, lng },\r\n            time: new Date(),\r\n        }\r\n        if (itemType === ExtraType.RNG || itemType === ExtraType.R) {\r\n            return {\r\n                ...newItem,\r\n                length: 1,\r\n            }\r\n        }\r\n        return newItem;\r\n    }\r\n\r\n    static toMeters = (distance) => {\r\n        return (distance * 1609.344);\r\n    }\r\n\r\n    static formatCoordinate = (coord) => {\r\n        try {\r\n            return geolib.decimal2sexagesimal(coord);\r\n        }\r\n        catch {\r\n            console.error(coord);\r\n        }\r\n    }\r\n\r\n    static unformatCoordinate = (coord) => {\r\n        return geolib.sexagesimal2decimal(coord);\r\n    }\r\n\r\n    static calcAngle = function (p1, p2, direction) {\r\n        const lat1 = p1.lat / 180 * Math.PI;\r\n        const lat2 = p2.lat / 180 * Math.PI;\r\n        const lng1 = p1.lng / 180 * Math.PI;\r\n        const lng2 = p2.lng / 180 * Math.PI;\r\n        const y = Math.sin(lng2 - lng1) * Math.cos(lat2);\r\n        const x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lng2 - lng1);\r\n        let brng;\r\n        if (direction === \"inbound\") {\r\n            brng = (Math.atan2(y, x) * 180 / Math.PI + 180).toFixed(0);\r\n        } else {\r\n            brng = (Math.atan2(y, x) * 180 / Math.PI + 360).toFixed(0);\r\n        }\r\n        return (brng % 360);\r\n    }\r\n\r\n    static calcDistance = function (p1, p2) {\r\n        const unit = \"mi\";\r\n        let dist = geolib.getDistanceSimple(p1, p2);\r\n        dist = geolib.convertUnit('mi', dist).toFixed(3);\r\n        return { dist, unit };\r\n    }\r\n\r\n    /**\r\n     * Finding diff between one old step and new one, \r\n     * and calc step's updates props.\r\n     * @param {NavStep} oldStep \r\n     * @param {L.Polyline} oldStepPolyline \r\n     * @param {NavStep} newStep \r\n     */\r\n    static getUpdatedStepWithChanges(oldStep, oldStepPolyline, newStep) {\r\n        // Check diff\r\n        let compareKeys = oldStep.marker || newStep.marker ? [\"positions\", \"marker\"] : [\"positions\"];\r\n        let differences = compareKeys.filter(k => {\r\n            if (typeof newStep[k] === 'object') {\r\n                return !_.isEqual(newStep[k], oldStep[k]);\r\n            }\r\n            return newStep[k] !== oldStep[k];\r\n        });\r\n\r\n        if (!differences.length) return oldStep;\r\n\r\n        let updatedStep = Object.assign({}, oldStep);\r\n\r\n        if (differences.includes(\"positions\")) {\r\n            Object.assign(updatedStep, {\r\n                positions: [\r\n                    oldStep.positions[0],\r\n                    GeoService.calcNewEnding(oldStepPolyline, newStep)\r\n                ]\r\n            });\r\n        }\r\n\r\n        if (newStep.marker) {\r\n            Object.assign(updatedStep, {\r\n                marker: {\r\n                    ...oldStep.marker\r\n                }\r\n            });\r\n        }\r\n\r\n        return updatedStep;\r\n    }\r\n\r\n    static calcNewEnding(from, length, angle) {\r\n        length = length * 1609.344; // convert to meters\r\n        let p2 = geolib.computeDestinationPoint(from, length, angle);\r\n        return new LatLng(p2.latitude.toFixed(10), p2.longitude.toFixed(10));\r\n    }\r\n\r\n    static calcNewMarkerPosition(from, to, percentage) {\r\n        if (percentage === 0 ) return from;\r\n        if (percentage === 100 ) return to;\r\n        const angle = GeoService.calcAngle(from, to);\r\n        const length = geolib.getDistanceSimple(from, to) * (percentage / 100);\r\n        const p2 = geolib.computeDestinationPoint(from, length, angle);\r\n        return new LatLng(p2.latitude.toFixed(15), p2.longitude.toFixed(15));\r\n    }\r\n\r\n    static isNorth(angle) {\r\n        angle = angle % 360;\r\n        return (angle < 90 || angle > 270);\r\n    }\r\n\r\n    static getNearestPosition(from, options, ignoreOptions = [], zoomLevel = 10, limit = 100) {\r\n        // Flattern options, to insure flat options list\r\n        options = _.flattenDeep(_.map(options, option => _.flatten(option.positions)));\r\n        // fliter out ignored options\r\n        options = _.filter(options, option => _.findIndex(ignoreOptions, option) < 0)\r\n        // If no options left - return given point\r\n        if (_.isEmpty(options)) return from;\r\n        // Otherwise - find nearest path\r\n        let nearestPoint = geolib.findNearest(from, options);\r\n        if (isNaN(nearestPoint.distance) || (nearestPoint.distance / zoomLevel) > limit || nearestPoint.key === -1) {\r\n            nearestPoint = from;\r\n        } else {\r\n            nearestPoint = options[nearestPoint.key];\r\n        }\r\n        return nearestPoint;\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport './StepEditorFormContainer.css';\r\nimport { Input, Button, Select, InputLabel, MenuItem, Divider, Switch } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { Slider } from '@material-ui/lab';\r\nimport GeoService from '../../services/GeoService';\r\nimport { StepType } from '../../models/steps';\r\nimport _ from 'lodash';\r\nimport {\r\n    MIN_FIELD_STEP_TYPES,\r\n    DEAFULT_MARKER_POSITION,\r\n    DEAFULT_ADDON_DATA\r\n} from '../../services/GeoService';\r\nimport { AddonType } from '../../models/addons';\r\n\r\nclass StepEditorFormContainer extends PureComponent {\r\n    state = {\r\n        values: this.getValuesFromProps(this.props),\r\n    }\r\n\r\n    getValuesFromProps(props) {\r\n        return {\r\n            positions: props.positions,\r\n            type: props.type.description,\r\n            angle: GeoService.calcAngle.apply(null, props.positions),\r\n            length: Number(GeoService.calcDistance.apply(null, props.positions).dist),\r\n            marker: props.marker ? props.marker.percentage : DEAFULT_MARKER_POSITION,\r\n            time: props.time,\r\n            isAddon: props.isAddon,\r\n            addonData: this.getAddonValues(props),\r\n        }\r\n    }\r\n\r\n    getAddonValues(props) {\r\n        let type = props.addonData.type\r\n            ? props.addonData.type\r\n            : DEAFULT_ADDON_DATA.type;\r\n        type = type.description;\r\n        const addonValues = { ...DEAFULT_ADDON_DATA, ...props.addonData, type };\r\n        const length = this.getAddonLength(addonValues.percentage, props.positions);\r\n        return { ...addonValues, length };\r\n    }\r\n\r\n    getStepLength(positions) {\r\n        return this.state && this.state.values && this.state.values.length\r\n            ? this.state.values.length\r\n            : Number(GeoService.calcDistance.apply(null, positions).dist);\r\n    }\r\n\r\n    getAddonLength(percentage, stepPositions) {\r\n        const length = this.getStepLength(stepPositions) * (percentage / 100);\r\n        return Number(length.toFixed(3));\r\n    }\r\n\r\n    /**\r\n     * Restart editor's state when selected a new step\r\n     *  (passed threw props) OR when step changes (???)\r\n     */\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id\r\n            || !_.isEqual(this.props.marker, prevProps.marker)\r\n            || !_.isEqual(this.props.addonData, prevProps.addonData)\r\n            || this.props.positions !== prevProps.positions) {\r\n            this.setState({\r\n                ...this.state,\r\n                values: this.getValuesFromProps(this.props),\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCoordinatesChange = (e) => {\r\n        let positions =\r\n            this.state.values.positions ? this.state.values.positions : [];\r\n        try {\r\n            positions[e.target.id][e.target.name] =\r\n                Number(GeoService.unformatCoordinate(e.target.value));\r\n        }\r\n        catch { console.warn(\"User entered wrong coord format: \", e.target.value); }\r\n        const angle = GeoService.calcAngle(...positions);\r\n        const length = Number(GeoService.calcDistance(...positions).dist);\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                positions, angle, length\r\n            }\r\n        });\r\n    }\r\n    handleCoordinatesSwitch = (e) => {\r\n        const positions = this.state.values.positions.reverse();\r\n        const angle = GeoService.calcAngle(...positions);\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                positions, angle\r\n            }\r\n        });\r\n    }\r\n    handleAngleChange = (e) => {\r\n        const angle = Number(e.target.value);\r\n        const positions = [\r\n            this.state.values.positions[0],\r\n            GeoService.calcNewEnding(\r\n                this.state.values.positions[0],\r\n                this.state.values.length,\r\n                angle\r\n            )\r\n        ];\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                angle, positions\r\n            }\r\n        });\r\n    }\r\n    handleLengthChange = (e) => {\r\n        const length = Number(e.target.value);\r\n        const positions = [\r\n            this.state.values.positions[0],\r\n            GeoService.calcNewEnding(\r\n                this.state.values.positions[0],\r\n                length,\r\n                this.state.values.angle\r\n            )\r\n        ];\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                length, positions\r\n            }\r\n        });\r\n    }\r\n    handleTypeChange = (e) => {\r\n        const type = e.target.value;\r\n        let time = MIN_FIELD_STEP_TYPES.includes(type) ? null\r\n            : this.state.values.time ? this.state.values.time : new Date();\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                type, time\r\n            }\r\n        });\r\n    }\r\n    handleMarkerChange = (e, value) => {\r\n        const marker = Number(value);\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                marker\r\n            }\r\n        });\r\n    }\r\n    handleTimeChange = (m) => {\r\n        const time = m.toDate();\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                time\r\n            }\r\n        });\r\n    }\r\n    handleAddonMarkerChange = (e, value) => {\r\n        const percentage = Number(value);\r\n        // Update addon's length accourding to new markers position\r\n        let length = this.getAddonLength(percentage);\r\n        const addonData = {\r\n            ...this.state.values.addonData,\r\n            percentage, length\r\n        };\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                addonData,\r\n            }\r\n        });\r\n    }\r\n    handleAddonTimeChange = (m) => {\r\n        const time = m.toDate();\r\n        const addonData = {\r\n            ...this.state.values.addonData,\r\n            time\r\n        };\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                addonData,\r\n            }\r\n        });\r\n    }\r\n    handleAddonTypeChange = (e) => {\r\n        const type = e.target.value;\r\n        const addonData = {\r\n            ...this.state.values.addonData,\r\n            type\r\n        };\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                addonData,\r\n            }\r\n        });\r\n    }\r\n    handleAddonLangthChange = (e) => {\r\n        let length = Number(e.target.value);\r\n        // Make sure addon's length in boundries of it's hosting step\r\n        if (length > this.state.values.length) length = this.state.values.length;\r\n        if (length < 0) length = 0;\r\n        // Update marker position accourding to new given length\r\n        const percentage = this.state.values.length\r\n            ? (length / this.state.values.length) * 100\r\n            : 0;\r\n        const addonData = {\r\n            ...this.state.values.addonData,\r\n            length, percentage\r\n        };\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                addonData,\r\n            }\r\n        });\r\n    }\r\n    handleAddonSwitch = (e) => {\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                isAddon: !this.state.values.isAddon,\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get updated marker values using given position & percentage\r\n     * or state's values (50 as percentage fallback).\r\n     */\r\n    getUpdatedMarker = (positions, percentage) => {\r\n        if (!positions) {\r\n            positions = this.state.values.positions;\r\n        }\r\n        if (!percentage && percentage !== 0) {\r\n            percentage = this.state.values.marker ?\r\n                this.state.values.marker : 50;\r\n        }\r\n        const position = GeoService.calcNewMarkerPosition(\r\n            positions[0],\r\n            positions[1],\r\n            percentage\r\n        );\r\n        return {\r\n            position, percentage\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"container\"\r\n                onSubmit={this.handleSubmit}>\r\n                <CoordinatesInput\r\n                    title={'From'}\r\n                    id={'0'}\r\n                    value={this.state.values.positions[0]}\r\n                    handleChange={this.handleCoordinatesChange}\r\n                >\r\n                    <Button onClick={this.handleCoordinatesSwitch}>\r\n                        <i className=\"material-icons\" style={{ transform: 'rotate(90deg)', display: 'block' }}>compare_arrows</i>\r\n                    </Button>\r\n                </CoordinatesInput>\r\n                <CoordinatesInput\r\n                    title={'To'}\r\n                    id={'1'}\r\n                    value={this.state.values.positions[1]}\r\n                    handleChange={this.handleCoordinatesChange}\r\n                />\r\n                <TypeInput\r\n                    title={'Type'}\r\n                    value={this.state.values.type}\r\n                    handleChange={this.handleTypeChange} />\r\n                <AngleInput\r\n                    title={'Degree'}\r\n                    value={this.state.values.angle}\r\n                    handleChange={this.handleAngleChange}\r\n                />\r\n                <LengthInput\r\n                    title={'Distance'}\r\n                    value={this.state.values.length}\r\n                    handleChange={this.handleLengthChange}\r\n                />\r\n                {this.state.values.time &&\r\n                    <TimeInput\r\n                        title={'Time'}\r\n                        value={this.state.values.time}\r\n                        handleChange={this.handleTimeChange} />}\r\n                {this.state.values.marker &&\r\n                    <MarkerInput\r\n                        title={'Marker'}\r\n                        value={this.state.values.marker}\r\n                        handleChange={this.handleMarkerChange} />}\r\n                <Divider />\r\n\r\n                <AddonSwitchInput\r\n                    title={'Addon'}\r\n                    value={this.state.values.isAddon}\r\n                    handleChange={this.handleAddonSwitch} />\r\n\r\n                {this.state.values.isAddon &&\r\n                    <AddonInput\r\n                        value={this.state.values.addonData}\r\n                        handlePositionChange={this.handleAddonMarkerChange}\r\n                        handleTimeChange={this.handleAddonTimeChange}\r\n                        handleTypeChange={this.handleAddonTypeChange}\r\n                        handleLengthChange={this.handleAddonLangthChange} />}\r\n\r\n                <Divider />\r\n                <div className=\"footerButtons\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\r\n                    <Button onClick={this.props.onDelete} variant=\"contained\">Delete</Button>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let values = { ...this.state.values };\r\n        values.type = StepType[values.type];\r\n        values.marker = this.getUpdatedMarker(values.positions, values.marker);\r\n        if (values.addonData) values.addonData = this.handleAddonSubmit(values);\r\n\r\n        this.props.onSave(values);\r\n    }\r\n\r\n    handleAddonSubmit = (values) => {\r\n        const type = AddonType[values.addonData.type];\r\n        console.log(values.positions, values.addonData.percentage);\r\n        console.log('getUpdatedMarker', this.getUpdatedMarker(values.positions, values.addonData.percentage));\r\n        return {\r\n            ...values.addonData, type,\r\n            ...this.getUpdatedMarker(values.positions, values.addonData.percentage)\r\n        };\r\n    }\r\n}\r\n\r\nexport default StepEditorFormContainer;\r\n\r\nconst CoordinatesInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <span>\r\n                <InputLabel style={{ 'display': 'block' }}\r\n                    htmlFor={props.name}>{props.title}</InputLabel>\r\n                {props.children}\r\n            </span>\r\n            <span>\r\n                <Input\r\n                    className=\"form-input\"\r\n                    id={props.id}\r\n                    name={\"lat\"}\r\n                    type=\"string\"\r\n                    value={GeoService.formatCoordinate(props.value.lat)}\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Lat\"\r\n                />\r\n                <Input\r\n                    className=\"form-input\"\r\n                    id={props.id}\r\n                    name={\"lng\"}\r\n                    type=\"string\"\r\n                    value={GeoService.formatCoordinate(props.value.lng)}\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Lng\"\r\n                />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AngleInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Input\r\n                className=\"form-input\"\r\n                type=\"number\"\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder=\"°\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LengthInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Input\r\n                className=\"form-input\"\r\n                type=\"number\"\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder=\"length\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TypeInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Select\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                inputProps={{\r\n                    name: 'type',\r\n                    id: 'type',\r\n                }}\r\n            >\r\n                <MenuItem value={\"GUIDELINE\"}>Guide Line</MenuItem>\r\n                <MenuItem value={\"TB\"}>TB</MenuItem>\r\n                <MenuItem value={\"COG\"}>COG</MenuItem>\r\n                <MenuItem value={\"CRNT\"}>Current</MenuItem>\r\n                <MenuItem value={\"TC\"}>TC</MenuItem>\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MarkerInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Slider\r\n                className=\"form-input\"\r\n                type=\"number\"\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <TimePicker\r\n                    className=\"form-input\"\r\n                    ampm={false}\r\n                    value={props.value}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddonSwitchInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Switch\r\n                className=\"form-input\"\r\n                title={props.value ? \"Remove Addon\" : \"Add Addon\"}\r\n                checked={props.value}\r\n                onChange={props.handleChange}>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddonInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            {/* Type */}\r\n            <InputLabel htmlFor={props.name}>{'Type'}</InputLabel>\r\n            <Select\r\n                value={props.value.type}\r\n                onChange={props.handleTypeChange}\r\n                inputProps={{\r\n                    name: 'type',\r\n                    id: 'type',\r\n                }}\r\n            >\r\n                <MenuItem value={\"RNG\"}>Range</MenuItem>\r\n                <MenuItem value={\"DR\"}>D.R</MenuItem>\r\n            </Select>\r\n\r\n            {/* Time */}\r\n            <InputLabel htmlFor={props.name}>{'Time'}</InputLabel>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <TimePicker\r\n                    className=\"form-input\"\r\n                    ampm={false}\r\n                    value={props.value.time}\r\n                    onChange={props.handleTimeChange}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {/* Position */}\r\n\r\n            <InputLabel htmlFor={props.name}>{'Position'}</InputLabel>\r\n            <Slider\r\n                className=\"form-input\"\r\n                type=\"number\"\r\n                value={props.value.percentage}\r\n                onChange={props.handlePositionChange}\r\n            />\r\n\r\n            {props.value.type === 'RNG' &&\r\n                <InputLabel htmlFor={props.name}>{' Range Length'}</InputLabel>}\r\n            {props.value.type === 'RNG' &&\r\n                <Input\r\n                    className=\"form-input\"\r\n                    type=\"number\"\r\n                    value={props.value.length}\r\n                    onChange={props.handleLengthChange}\r\n                    placeholder=\"Range length\"\r\n                />}\r\n        </div>\r\n    )\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport './StepEditorFormContainer.css';\r\nimport { Input, Button, Select, InputLabel, MenuItem } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, TimePicker } from 'material-ui-pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport GeoService from '../../services/GeoService';\r\nimport { ExtraType } from '../../models/extras';\r\n\r\nclass StepEditorFormContainer extends PureComponent {\r\n    state = {\r\n        values: {\r\n            position: this.props.position,\r\n            type: this.props.type.description,\r\n            length: this.props.length,\r\n            time: this.props.time,\r\n        },\r\n    }\r\n\r\n    /**\r\n     * Restart editor's state when selected a new step\r\n     *  (passed threw props) OR when step changes (???)\r\n     */\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id\r\n            || this.props.length !== prevProps.length\r\n            || this.props.position !== prevProps.position) {\r\n            let position = this.props.position;\r\n            let length = this.props.length;\r\n            let type = this.props.type.description;\r\n            let time = this.props.time;\r\n            this.setState({\r\n                ...this.state,\r\n                values: {\r\n                    position, length, type, time\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCoordinatesChange = (e) => {\r\n        let position = this.state.values.position;\r\n        try { \r\n            position[e.target.name] = Number(GeoService.unformatCoordinate(e.target.value)); \r\n        }\r\n        catch { console.warn(\"User entered wrong coord format: \", e.target.value); }\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                position,\r\n            }\r\n        });\r\n    }\r\n    handleLengthChange = (e) => {\r\n        let length = Number(e.target.value);\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                length\r\n            }\r\n        });\r\n    }\r\n    handleTypeChange = (e) => {\r\n        let type = e.target.value;\r\n        let length;\r\n        if (type === \"RNG\" || type === \"R\")  {\r\n            length = this.state.values.length\r\n                ? this.state.values.length\r\n                : -1;\r\n        } else {\r\n            length = null;\r\n        }\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                type, length\r\n            }\r\n        });\r\n    }\r\n\r\n    handleTimeChange = (m) => {\r\n        let time = m.toDate();\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                time\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"container\"\r\n                onSubmit={this.handleSubmit}>\r\n                <CoordinatesInput\r\n                    title={'Position'}\r\n                    value={this.state.values.position}\r\n                    handleChange={this.handleCoordinatesChange}\r\n                />\r\n                <TypeInput\r\n                    title={'Type'}\r\n                    value={this.state.values.type}\r\n                    handleChange={this.handleTypeChange} />\r\n                <TimeInput\r\n                    title={'Time'}\r\n                    value={this.state.values.time}\r\n                    handleChange={this.handleTimeChange} />\r\n                {(this.state.values.length || this.state.values.length === 0) \r\n                    && <LengthInput\r\n                            title={'Length'}\r\n                            value={this.state.values.length}\r\n                            handleChange={this.handleLengthChange} />}\r\n                \r\n                <div className=\"footerButtons\">\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\r\n                    <Button onClick={this.props.onDelete} variant=\"contained\">Delete</Button>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let values = { ...this.state.values };\r\n        values.type = ExtraType[values.type];\r\n        this.props.onSave(values);\r\n    }\r\n}\r\n\r\nexport default StepEditorFormContainer;\r\n\r\nconst CoordinatesInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <span>\r\n                <Input\r\n                    className=\"form-input\"\r\n                    id={props.id}\r\n                    name={\"lat\"}\r\n                    type=\"string\"\r\n                    value={GeoService.formatCoordinate(props.value.lat)}\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Lat\"\r\n                />\r\n                <Input\r\n                    className=\"form-input\"\r\n                    id={props.id}\r\n                    name={\"lng\"}\r\n                    type=\"string\"\r\n                    value={GeoService.formatCoordinate(props.value.lng)}\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Lng\"\r\n                />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LengthInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Input\r\n                className=\"form-input\"\r\n                type=\"number\"\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder=\"length\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TypeInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <Select\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                inputProps={{\r\n                    name: 'type',\r\n                    id: 'type',\r\n                }}\r\n            >\r\n                <MenuItem value={\"FIX\"}>Fix</MenuItem>\r\n                <MenuItem value={\"R\"}>Radius</MenuItem>\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TimeInput = (props) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <InputLabel htmlFor={props.name}>{props.title}</InputLabel>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <TimePicker\r\n                    className=\"form-input\"\r\n                    ampm={false}\r\n                    value={props.value}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './Editor.css';\r\nimport { Card } from '@material-ui/core';\r\nimport StepEditorFormContainer from './StepEditorFormContainer';\r\nimport ExtraEditorFormContainer from './ExtraEditorFormContainer';\r\nimport { StepType } from '../../models/steps';\r\n\r\nclass Editor extends Component {\r\n\r\n    state = {\r\n        values: {}\r\n    }\r\n\r\n    render() {\r\n        let editorContent;\r\n        if (this.props.item) {\r\n            editorContent = (StepType[this.props.item.type.description])\r\n                ? (\r\n                    <Card className=\"EditorCard\">\r\n                        <StepEditorFormContainer\r\n                            key={this.props.id}\r\n                            onSave={this.onSave}\r\n                            onDelete={this.onDelete}\r\n                            {...this.props.item}>\r\n                        </StepEditorFormContainer>\r\n                    </Card>\r\n                )\r\n                : (\r\n                    <Card className=\"EditorCard\">\r\n                        <ExtraEditorFormContainer\r\n                            key={this.props.id}\r\n                            onSave={this.onSave}\r\n                            onDelete={this.onDelete}\r\n                            {...this.props.item}>\r\n                        </ExtraEditorFormContainer>\r\n                    </Card>\r\n                );\r\n        }\r\n\r\n        return (\r\n            <section className=\"EditorContainer\">\r\n                {editorContent}\r\n            </section>\r\n        )\r\n    }\r\n\r\n    onSave = (changes) => {\r\n        this.props.onSave(changes);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.item.id);\r\n    }\r\n}\r\n\r\nexport default Editor;","import React, { Component } from 'react';\r\nimport \"./Drawkit.css\";\r\nimport { Card, Divider, Button } from '@material-ui/core';\r\nimport { StepType } from '../../models/steps';\r\nimport { ExtraType } from '../../models/extras';\r\n\r\nconst drawkitStepTools = [\r\n    {\r\n        type: StepType.GUIDELINE,\r\n        acronyms: \"GL\",\r\n        matIcon: \"face\",\r\n        options: {\r\n            color: 'grey',\r\n            dashArray: '4',\r\n        },\r\n    },\r\n    {\r\n        type: StepType.TB,\r\n        acronyms: \"TB\",\r\n        matIcon: \"face\",\r\n        options: {\r\n        },\r\n    },\r\n    {\r\n        type: StepType.COG,\r\n        acronyms: \"COG\",\r\n        matIcon: \"face\",\r\n        options: {\r\n            color: \"black\",\r\n        },\r\n    },\r\n    {\r\n        type: StepType.CRNT,\r\n        acronyms: \"CRNT\",\r\n        matIcon: \"face\",\r\n        options: {\r\n            color: \"white\",\r\n        },\r\n    },\r\n    {\r\n        type: StepType.TC,\r\n        acronyms: \"TC\",\r\n        matIcon: \"face\",\r\n        options: {\r\n            color: \"white\",\r\n        },\r\n    },\r\n];\r\n\r\nconst drawkitExtrasTools = [\r\n    {\r\n        type: ExtraType.FIX,\r\n        acronyms: \"FIX\",\r\n        matIcon: \"face\",\r\n        options: {\r\n        },\r\n    },\r\n    {\r\n        type: ExtraType.R,\r\n        acronyms: \"R\",\r\n        matIcon: \"face\",\r\n        options: {\r\n        },\r\n    },\r\n];\r\n\r\nclass Drawkit extends Component {\r\n    render() {\r\n        let stepTools = this.getDrawkitTools(drawkitStepTools);\r\n        let extrasTools = this.getDrawkitTools(drawkitExtrasTools);\r\n        \r\n        return (<section>\r\n            <Card className=\"drawkitToolList\">\r\n                {stepTools}\r\n            </Card>\r\n            <Card className=\"drawkitToolList\">\r\n                {extrasTools}\r\n            </Card>\r\n            <Card className=\"drawkitToolList drawkitClearAll\">\r\n                <Button \r\n                    title={\"Clear All\"}\r\n                    onClick={this.props.onClearAll}>\r\n                    <i className=\"material-icons\">delete_sweep</i>\r\n                </Button>\r\n            </Card>\r\n            {this.props.children}\r\n        </section>)\r\n    }\r\n\r\n    getDrawkitTools(tools) {\r\n        return tools.map((tool, index) => {\r\n            let selectedClass =\r\n                this.props.selectedTool &&\r\n                    this.props.selectedTool.type === tool.type\r\n                    ? 'selected' : '';\r\n            let divider = index !== drawkitStepTools.length - 1 ? <Divider /> : null;\r\n            return (\r\n                <span key={index}>\r\n                    <Button\r\n                        className={`drawkitTool draw-${tool.acronyms.toLocaleLowerCase()} ${selectedClass}`}\r\n                        title={`Draw ${tool.acronyms}`}\r\n                        variant={this.props.selectedTool && this.props.selectedTool.type === tool.type ? 'contained' : 'text'}\r\n                        onClick={() => { this.onSelectTool(tool) }}>\r\n                        {tool.acronyms}\r\n\r\n                    </Button>\r\n                    {divider}\r\n                </span>\r\n            )\r\n        });\r\n    }\r\n\r\n    onSelectTool(tool) {\r\n        this.props.onSelectTool(tool);\r\n    }\r\n}\r\n\r\nexport default Drawkit;","import L from 'leaflet';\r\n\r\n\r\n/* Extras Icons */\r\n\r\nexport const archIcon = L.icon({\r\n    iconUrl: 'arch.png',\r\n    iconSize: [120, 40], // size of the icon\r\n    iconAnchor: [60, 10], // point of the icon which will correspond to marker's location\r\n});\r\n\r\nexport const pointIcon = L.icon({\r\n    iconUrl: 'point.png',\r\n    iconSize: [50, 50], // size of the icon\r\n    iconAnchor: [25, 25], // point of the icon which will correspond to marker's location\r\n});\r\n","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as moment from 'moment';\r\nimport * as navExtra from './navExtra';\r\n\r\nconst rangeExtraProps = {\r\n    icon: navExtra.archIcon,\r\n}\r\n\r\nexport default class RangeExtra {\r\n    static addTo(map, options) {\r\n        const time = options.time ? moment(options.time).format(\"HH:mm\") : \"Error\";\r\n        const length = options.length || options.length === 0 ? options.length : 0;\r\n\r\n        const marker = L.marker(\r\n            options.position,\r\n            {\r\n                ...rangeExtraProps,\r\n                rotationAngle: options.angle,\r\n            }\r\n        ).addTo(map);\r\n\r\n        marker.bindTooltip(`${time} / ${length} M`, {\r\n            permanent: true,\r\n            offset: [0, 10 * +GeoService.isNorth(options.angle)],\r\n        });\r\n\r\n        return marker;\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as moment from 'moment';\r\nimport * as navExtra from './navExtra';\r\n\r\nconst drExtraProps = {\r\n    icon: navExtra.archIcon\r\n}\r\n\r\nexport default class DRExtra {\r\n    static addTo(map, options) {\r\n        let marker = L.marker(\r\n            options.position,\r\n            {\r\n                ...drExtraProps,\r\n                rotationAngle: options.angle,\r\n            }\r\n        ).addTo(map);\r\n        let time = options.time ? moment(options.time).format(\"HH:mm\") : \"Error\";\r\n        marker.bindTooltip(`${time}`, {\r\n            permanent: true,\r\n            offset: [0, 10 * +GeoService.isNorth(options.angle)],\r\n        });\r\n        return marker;\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport { AddonType } from '../../../models/addons';\r\nimport RangeExtra from '../extras/RangeExtra';\r\nimport DRExtra from '../extras/DRExtra';\r\n\r\n/* Markers Icons */\r\n\r\nexport const emptyIcon = L.icon({\r\n    iconUrl: 'empty.png',\r\n    iconSize: [10, 10],\r\n    iconAnchor: [5, 5],\r\n});\r\n\r\nexport const singleArrowIcon = L.icon({\r\n    iconUrl: 'single.png',\r\n    iconSize: [40, 40], // size of the icon\r\n    iconAnchor: [20, 20], // point of the icon which will correspond to marker's location\r\n});\r\n\r\nexport const doubleArrowIcon = L.icon({\r\n    iconUrl: 'double.png',\r\n    iconSize: [40, 40], // size of the icon\r\n    iconAnchor: [20, 20], // point of the icon which will correspond to marker's location\r\n});\r\n\r\nexport const tripleArrowIcon = L.icon({\r\n    iconUrl: 'triple.png',\r\n    iconSize: [40, 40], // size of the icon\r\n    iconAnchor: [20, 20], // point of the icon which will correspond to marker's location\r\n});\r\n\r\nexport const getAddon = (map, options) => {\r\n    if (!options.isAddon) return;\r\n    switch (options.addonData.type.description) {\r\n        case AddonType.RNG.description:\r\n            return RangeExtra.addTo(map, { ...options.addonData, angle: options.angle });\r\n        case AddonType.DR.description:\r\n        default:\r\n            return DRExtra.addTo(map, { ...options.addonData, angle: options.angle });\r\n    }\r\n}","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as navStep from './navStep';\r\n\r\nconst guidelineProps = {\r\n    color: 'grey',\r\n    dashArray: '4',\r\n}\r\nconst guidelineMarkerProps = {\r\n    icon: navStep.emptyIcon,\r\n}\r\nexport default class GuidelineStep {\r\n    static addTo(map, options) {\r\n        let step = L.polyline(options.positions, { ...guidelineProps }).addTo(map);\r\n        let { dist, unit } = {\r\n            ...GeoService.calcDistance(\r\n                ...Object.values(step.getLatLngs())\r\n            )\r\n        };\r\n        let angle = GeoService.calcAngle(\r\n            ...Object.values(step.getLatLngs())\r\n        );\r\n        const markerPosition = options.marker && options.marker.position\r\n            ? options.marker.position : step.getCenter();\r\n        const marker = L.marker(markerPosition, {\r\n            ...guidelineMarkerProps,\r\n        }).addTo(map);\r\n        marker.bindTooltip(`${angle}° / ${dist} ${unit}`, {\r\n            permanent: true,\r\n        });\r\n        \r\n        const addon = navStep.getAddon(map, options);\r\n        if (addon) return [step, marker, addon];\r\n\r\n        return [step, marker];\r\n    }\r\n}","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as navStep from './navStep';\r\nimport * as moment from 'moment';\r\n\r\nconst tbStepProps = {\r\n    color: 'black',\r\n    width: 8,\r\n}\r\nconst tbMarkerProps = {\r\n    // Put marker's const props here..\r\n    icon: navStep.singleArrowIcon,\r\n}\r\n\r\nexport default class TBStep {\r\n    static addTo(map, options) {\r\n        const step = L.polyline(options.positions, { ...tbStepProps }).addTo(map);\r\n        const position = options.marker && options.marker.position\r\n            ? options.marker.position : step.getCenter();\r\n        const marker = L.marker(position, {\r\n            ...tbMarkerProps,\r\n            rotationAngle: GeoService.calcAngle.apply(null, options.positions)\r\n        }).addTo(map);\r\n        const angle = GeoService.calcAngle(\r\n            ...Object.values(step.getLatLngs())\r\n        );\r\n        const time = options.time ? moment(options.time).format(\"HH:mm\") : \"Error\";\r\n        marker.bindTooltip(`${angle}° / ${time}`, {\r\n            permanent: true,\r\n            offset: [0, 5 * +GeoService.isNorth(angle)],\r\n        });\r\n        const addon = navStep.getAddon(map, options);\r\n        if (addon) return [step, marker, addon];\r\n\r\n        return [step, marker];\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as navStep from './navStep';\r\n\r\nconst cogStepProps = {\r\n    color: 'black',\r\n    width: 8,\r\n}\r\nconst cogMarkerProps = {\r\n    // Put marker's const props here..\r\n    icon: navStep.doubleArrowIcon,\r\n}\r\n\r\nexport default class CogStep {\r\n    static addTo(map, options) {\r\n        const step = L.polyline(options.positions, { ...cogStepProps }).addTo(map);\r\n        const markerPosition = options.marker && options.marker.position\r\n            ? options.marker.position : step.getCenter();\r\n        const marker = L.marker(markerPosition, {\r\n            ...cogMarkerProps,\r\n            rotationAngle: GeoService.calcAngle.apply(null, options.positions)\r\n        }).addTo(map);\r\n        let { dist, unit } = {\r\n            ...GeoService.calcDistance(\r\n                ...Object.values(step.getLatLngs())\r\n            )\r\n        };\r\n        const angle = GeoService.calcAngle(\r\n            ...Object.values(step.getLatLngs())\r\n        );\r\n        marker.bindTooltip(`${angle}° / ${dist} ${unit}`, {\r\n            permanent: true,\r\n            offset: [0, 15 * +GeoService.isNorth(angle)],\r\n        });\r\n\r\n        const addon = navStep.getAddon(map, options);\r\n        if (addon) return [step, marker, addon];\r\n        \r\n        return [step, marker];\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as navStep from './navStep';\r\n\r\nconst crntStepProps = {\r\n    color: 'black',\r\n    width: 8,\r\n}\r\nconst crntMarkerProps = {\r\n    // Put marker's const props here..\r\n    icon: navStep.tripleArrowIcon,\r\n}\r\n\r\nexport default class CrntStep {\r\n    static addTo(map, options) {\r\n        let step = L.polyline(options.positions, { ...crntStepProps }).addTo(map);\r\n        let markerPosition = options.marker && options.marker.position\r\n            ? options.marker.position : step.getCenter();\r\n        let marker = L.marker(markerPosition, {\r\n            ...crntMarkerProps,\r\n            rotationAngle: GeoService.calcAngle.apply(null, options.positions)\r\n        }).addTo(map);\r\n        let { dist, unit } = {\r\n            ...GeoService.calcDistance(\r\n                ...Object.values(step.getLatLngs())\r\n            )\r\n        };\r\n        let angle = GeoService.calcAngle(\r\n            ...Object.values(step.getLatLngs())\r\n        );\r\n        marker.bindTooltip(`${angle}° / ${dist} ${unit}`, {\r\n            permanent: true,\r\n            offset: [0, 15 * +GeoService.isNorth(angle)],\r\n        });\r\n\r\n        const addon = navStep.getAddon(map, options);\r\n        if (addon) return [step, marker, addon];\r\n        \r\n        return [step, marker];\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport GeoService from '../../../services/GeoService';\r\nimport * as navStep from './navStep';\r\n\r\nconst tcStepProps = {\r\n    color: 'black',\r\n    width: 8,\r\n}\r\nconst tcMarkerProps = {\r\n    icon: navStep.doubleArrowIcon,\r\n}\r\n\r\nexport default class TCStep {\r\n    static addTo(map, options) {\r\n        let step = L.polyline(options.positions, { ...tcStepProps }).addTo(map);\r\n        let markerPosition = options.marker && options.marker.position\r\n            ? options.marker.position : step.getCenter();\r\n        let marker = L.marker(markerPosition, {\r\n            ...tcMarkerProps,\r\n            rotationAngle: GeoService.calcAngle.apply(null, options.positions)\r\n        }).addTo(map);\r\n        let { dist, unit } = {\r\n            ...GeoService.calcDistance(\r\n                ...Object.values(step.getLatLngs())\r\n            )\r\n        };\r\n        let angle = GeoService.calcAngle(\r\n            ...Object.values(step.getLatLngs())\r\n        );\r\n        marker.bindTooltip(`${angle}° / ${dist} ${unit}`, {\r\n            permanent: true,\r\n            offset: [0, 15 * +GeoService.isNorth(angle)],\r\n        });\r\n\r\n        const addon = navStep.getAddon(map, options);\r\n        if (addon) return [step, marker, addon];\r\n        \r\n        return [step, marker];\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport * as moment from 'moment';\r\nimport * as navExtra from './navExtra';\r\n\r\nconst fixExtraProps = {\r\n    icon: navExtra.pointIcon\r\n}\r\n\r\nexport default class FixExtra {\r\n    static addTo(map, options) {\r\n        let marker = L.marker(\r\n            options.position,\r\n            {\r\n                ...fixExtraProps,\r\n            }\r\n        ).addTo(map);\r\n        let time = options.time ? moment(options.time).format(\"HH:mm\") : \"Error\";\r\n        marker.bindTooltip(`${time}`, {\r\n            permanent: true,\r\n            offset: [5, 0],\r\n        });\r\n        return [marker];\r\n    }\r\n}\r\n","import L from 'leaflet';\r\nimport * as moment from 'moment';\r\nimport GeoService from '../../../services/GeoService';\r\n\r\nexport default class RadiusExtra {\r\n    static addTo(map, options) {\r\n        let time = options.time ? moment(options.time).format(\"HH:mm\") : \"Error\";\r\n        let length = options.length ? options.length : 0;\r\n        let radius = GeoService.toMeters(length);\r\n        \r\n        let circle = L.circle(\r\n            options.position, \r\n            {\r\n                radius: radius,\r\n            }\r\n        ).addTo(map);\r\n        \r\n        circle.bindTooltip(`${time} / ${length} M`, {\r\n            permanent: true,\r\n            offset: [5, 0],\r\n        });\r\n        \r\n        return [circle];\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './MapView.css';\r\nimport _ from 'lodash';\r\nimport { Map, TileLayer } from 'react-leaflet';\r\nimport Control from 'react-leaflet-control';\r\nimport L from 'leaflet';\r\nimport 'leaflet-mouse-position';\r\nimport 'leaflet-rotatedmarker';\r\n\r\nimport GeoService from '../services/GeoService';\r\nimport Editor from '../side/editor/Editor';\r\nimport Drawkit from './drawkit/Drawkit';\r\nimport GuidelineStep from './steps/navStep/GuidelineStep';\r\nimport TBStep from './steps/navStep/TBStep';\r\nimport CogStep from './steps/navStep/CogStep';\r\nimport { StepType } from '../models/steps';\r\nimport CrntStep from './steps/navStep/CrntStep';\r\nimport TCStep from './steps/navStep/TCStep';\r\nimport { Card, Switch } from '@material-ui/core';\r\nimport { ExtraType } from '../models/extras';\r\nimport FixExtra from './steps/extras/FixExtra';\r\nimport RadiusExtra from './steps/extras/RadiusExtra';\r\n\r\n\r\nconst geoService = new GeoService();\r\nconst COOREDINATES_DEPTH = 15;\r\nconst initialCenter = [32.8201719, 34.6261597];\r\nconst initialZoom = 11;\r\n\r\nclass MapView extends Component {\r\n\r\n    leafletMap = null;\r\n    leafletSteps = {};\r\n    leafletExtras = {};\r\n\r\n    state = {\r\n        steps: geoService.getSteps(),\r\n        extras: [],\r\n        selectedItem: undefined,\r\n        selectedTool: null,\r\n        draw: {\r\n            isDrawing: false,\r\n            snapping: true,\r\n        },\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.escFunction = this.escFunction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        this.leafletMap.on('click', this.onMapClick.bind(this));\r\n        this.setMousePosition();\r\n        this.drawStateSteps();\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //this.leafletMap.invalidateSize();\r\n        this.drawStateSteps();\r\n        this.drawStateExtras();\r\n    }\r\n\r\n    render() {\r\n        return (<section className=\"MapViewContainer\">\r\n            <Map id=\"map\" key=\"mymap\"\r\n                ref={this.setLeafletMapRef}\r\n                center={initialCenter} zoom={initialZoom}\r\n                zoomControl={false}\r\n                maxZoom={15}\r\n                minZoom={9}\r\n                animate={true}\r\n                onMouseMove={this.onDrawingMove.bind(this)}>\r\n\r\n                {/* World */}\r\n                {/* <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    opacity={0.5}\r\n                    minZoom={12}\r\n                /> */}\r\n\r\n                {/* Full */}\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"full/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n\r\n                {/* Haifa */}\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"haifa/{z}/{x}/{y}.png\"\r\n                    minZoom={12}\r\n                />\r\n\r\n                {/* Kishon */}\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"kishon/{z}/{x}/{y}.png\"\r\n                    minZoom={15}\r\n                />\r\n\r\n                {/* Hadera */}\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"hadera/{z}/{x}/{y}.png\"\r\n                    minZoom={12}\r\n                />\r\n\r\n                <Control position=\"topright\">\r\n                    <img src={'/icon.png'} alt={''} width=\"100px\"/>\r\n                    <Drawkit\r\n                        selectedTool={this.state.selectedTool}\r\n                        onSelectTool={this.onSelectTool}\r\n                        onClearAll={this.onClearAll}>\r\n\r\n                        <Card>\r\n                            {this.state.draw.snapping\r\n                                ? <i className=\"material-icons\">lock</i>\r\n                                : <i className=\"material-icons\">lock_open</i>}\r\n                            <Switch\r\n                                title={this.state.draw.snapping ? \"Snapping On\" : \"Snapping Off\"}\r\n                                checked={this.state.draw.snapping}\r\n                                onChange={this.onSnappingSwitch}>\r\n                            </Switch>\r\n                        </Card>\r\n                    </Drawkit>\r\n                </Control>\r\n\r\n                <Control position=\"topleft\">\r\n                    <Editor\r\n                        item={this.state.selectedItem}\r\n                        onStepChange={this.state.editorOnChange}\r\n                        onSave={this.handleSelectedItemChanges.bind(this)}\r\n                        onDelete={this.handleEditorDelete.bind(this)}\r\n                    >\r\n                    </Editor>\r\n                </Control>\r\n\r\n            </Map>\r\n        </section>)\r\n    }\r\n\r\n    setLeafletMapRef = map => (this.leafletMap = map && map.leafletElement);\r\n\r\n    /* Snapping */\r\n    onSnappingSwitch = (e) => {\r\n        this.setState({\r\n            draw: {\r\n                ...this.state.draw,\r\n                snapping: !this.state.draw.snapping\r\n            },\r\n        });\r\n    }\r\n\r\n    /* Drawkit */\r\n    onSelectTool = (tool) => {\r\n        if (!this.state.selectedTool || this.state.selectedTool.type !== tool.type) {\r\n            this.setState({ selectedTool: tool });\r\n        }\r\n        else {\r\n            this.setState({ selectedTool: null });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Erase all items from map, unselect selected step & empty item lists.\r\n     */\r\n    onClearAll = () => {\r\n        this.eraseExtras();\r\n        this.eraseSteps();\r\n        this.unSelectItem();\r\n        this.setState({\r\n            steps: [],\r\n            extras: [],\r\n        });\r\n    }\r\n\r\n    /* Mouse */\r\n    setMousePosition() {\r\n        if (!this.leafletMap) {\r\n            console.error(\"Couldn't add lines to map. Missing map ref\");\r\n        }\r\n        else {\r\n            L.control.mousePosition({\r\n                position: 'bottomright',\r\n                lngFormatter: GeoService.formatCoordinate,\r\n                latFormatter: GeoService.formatCoordinate,\r\n            }).addTo(this.leafletMap);\r\n        }\r\n    }\r\n\r\n    /* Extras */\r\n    drawStateExtras() {\r\n        if (!this.state.extras) return;\r\n        if (!this.leafletMap) {\r\n            console.error(\"Couldn't draw extras on map. Missing map ref\");\r\n            return;\r\n        }\r\n        this.drawExtras(this.state.extras);\r\n    }\r\n\r\n    /**\r\n     * Draw each nav extra in given list.\r\n     * If already exists, remove it, create a new one, and add it.\r\n     */\r\n    drawExtras(extras) {\r\n        this.eraseExtras();\r\n        extras.forEach(navExtra => {\r\n            // Create new instance\r\n            this.leafletExtras[navExtra.id] = this._createNewExtra(navExtra);\r\n            // Register event listeners\r\n            _.each(this.leafletExtras[navExtra.id],\r\n                this.extraOnClickListener.bind(this)\r\n            );\r\n        });\r\n    }\r\n\r\n    _createNewExtra(navExtra) {\r\n        switch (navExtra.type) {\r\n            case ExtraType.FIX:\r\n                return FixExtra.addTo(this.leafletMap, navExtra);\r\n            case ExtraType.R:\r\n            default:\r\n                return RadiusExtra.addTo(this.leafletMap, navExtra);\r\n        }\r\n    }\r\n\r\n    extraOnClickListener(extraLayer) {\r\n        extraLayer.on('click', this.extraOnClick.bind(this));\r\n    }\r\n\r\n    extraOnClick(event) {\r\n        this.itemOnClick(event, this.state.extras, this.leafletExtras);\r\n    }\r\n\r\n    eraseExtras = () => {\r\n        this.eraseItems(this.leafletExtras);\r\n    }\r\n\r\n    /* Steps */\r\n    drawStateSteps() {\r\n        if (!this.state.steps) return;\r\n        if (!this.leafletMap) {\r\n            console.error(\"Couldn't add lines to map. Missing map ref\");\r\n            return;\r\n        }\r\n        this.drawSteps(this.state.steps);\r\n    }\r\n\r\n    /**\r\n     * Draw each nav step in state's steps list.\r\n     * If step already exists, remove it, create a new one, and add it.\r\n     */\r\n    drawSteps(steps) {\r\n        this.eraseSteps();\r\n        steps.forEach(navStep => {\r\n            // Create new steps\r\n            this.leafletSteps[navStep.id] = this._createNewStep(navStep);\r\n            // Register event listeners\r\n            this.leafletSteps[navStep.id].map(\r\n                this.stepOnClickListener.bind(this)\r\n            );\r\n        });\r\n    }\r\n\r\n    _createNewStep(navStep) {\r\n        switch (navStep.type) {\r\n            case StepType.TB:\r\n                return TBStep.addTo(this.leafletMap, navStep);\r\n            case StepType.COG:\r\n                return CogStep.addTo(this.leafletMap, navStep);\r\n            case StepType.CRNT:\r\n                return CrntStep.addTo(this.leafletMap, navStep);\r\n            case StepType.TC:\r\n                return TCStep.addTo(this.leafletMap, navStep);\r\n            case StepType.GUIDELINE:\r\n            default:\r\n                return GuidelineStep.addTo(this.leafletMap, navStep);\r\n        }\r\n    }\r\n\r\n    stepOnClickListener(stepLayer) {\r\n        stepLayer.on('click', this.stepOnClick.bind(this));\r\n    }\r\n\r\n    stepOnClick(event) {\r\n        this.itemOnClick(event, this.state.steps, this.leafletSteps);\r\n    }\r\n\r\n    eraseSteps = () => {\r\n        this.eraseItems(this.leafletSteps);\r\n    }\r\n\r\n    /* General Item */\r\n    itemOnClick(event, collection, references) {\r\n        // Isolate click\r\n        event.originalEvent.view.L.DomEvent.stopPropagation(event);\r\n        if (this.state.draw.isDrawing\r\n            || (!this.state.draw.isDrawing && this.state.selectedTool)) {\r\n            this.onMapClick(event);\r\n            return;\r\n        }\r\n\r\n        // Find selected item\r\n        const clickedItemId = +_.findKey(references, (itemLayers) => {\r\n            return itemLayers.indexOf(event.target) >= 0;\r\n        });\r\n        if (!clickedItemId) return;\r\n        // Select / Unselect\r\n        if (!this.state.selectedItem || clickedItemId !== this.state.selectedItem.id) {\r\n            this.selectItem(_.find(collection, {\r\n                id: clickedItemId\r\n            }));\r\n        }\r\n        else {\r\n            this.unSelectItem();\r\n        }\r\n    }\r\n\r\n    selectItem(item) {\r\n        this.setState({\r\n            selectedItem: item,\r\n        });\r\n    }\r\n\r\n    unSelectItem() {\r\n        this.setState({\r\n            selectedItem: undefined,\r\n        });\r\n    }\r\n\r\n    eraseItems(references) {\r\n        if (!this.leafletMap) {\r\n            console.error(\"Couldn't erase items from map. Missing map ref\");\r\n            return;\r\n        }\r\n        _.mapValues(references, navItem => {\r\n            // Remove all items layers from map\r\n            _.each(navItem, layer => this.leafletMap.removeLayer(layer))\r\n        });\r\n    }\r\n\r\n    /* User Interaction */\r\n    escFunction(event) {\r\n        if (event.keyCode === 27) {\r\n            this.handleEscPress();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cancel drawing & unselect step when ESC pressed.\r\n     */\r\n    handleEscPress() {\r\n        // Check with tool type is used (step or extras)\r\n        if (this.state.selectedTool) {\r\n            StepType[this.state.selectedTool.type.description]\r\n                // Handle the esc press accordinglly\r\n                ? this.handleStepEsc()\r\n                : this.handleExtrasEsc();\r\n        }\r\n\r\n        this.setState({\r\n            selectedItem: undefined,\r\n            draw: {\r\n                ...this.state.draw,\r\n                isDrawing: false,\r\n            },\r\n        });\r\n    }\r\n\r\n    handleStepEsc() {\r\n        let steps = [];\r\n        if (this.state.draw.isDrawing) {\r\n            const selectedItem = this.state.selectedItem;\r\n            steps = [...this.state.steps];\r\n            _.remove(steps, step => step.id === selectedItem.id);\r\n        }\r\n        else {\r\n            steps = this.state.steps;\r\n        }\r\n        this.setState({ steps });\r\n    }\r\n\r\n    handleExtrasEsc() {\r\n        let extras = [];\r\n        if (this.state.draw.isDrawing) {\r\n            const selectedItem = this.state.selectedItem;\r\n            extras = [...this.state.extras];\r\n            _.remove(extras, extra => extra.id === selectedItem.id);\r\n        }\r\n        else {\r\n            extras = this.state.extras;\r\n        }\r\n        this.setState({ extras });\r\n    }\r\n\r\n    onDrawingMove(event) {\r\n        event.originalEvent.preventDefault();\r\n        event.originalEvent.stopPropagation();\r\n        if (this.state.draw.isDrawing) {\r\n            // Check with tool type is used (step or extras)\r\n            StepType[this.state.selectedTool.type.description]\r\n                // Handle the event accordinglly\r\n                ? this.handleStepDrawing(event)\r\n                : this.hendleExtrasDrawing(event);\r\n        }\r\n    }\r\n\r\n    handleStepDrawing(event) {\r\n        // Update current selected step\r\n        let updatedSteps = this.state.steps;\r\n        let updatedSelectedStep = updatedSteps.find(step => {\r\n            return step.id === this.state.selectedItem.id;\r\n        });\r\n        updatedSelectedStep = Object.assign(updatedSelectedStep, {\r\n            positions: [\r\n                updatedSelectedStep.positions[0],\r\n                {\r\n                    lat: Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                    lng: Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH))\r\n                }\r\n            ]\r\n        });\r\n\r\n        this.setState({\r\n            steps: updatedSteps,\r\n            selectedItem: updatedSelectedStep,\r\n        });\r\n    }\r\n\r\n    hendleExtrasDrawing(event) {\r\n        // Update current selected step\r\n        let updatedExtras = this.state.extras;\r\n        let updatedSelectedItem = updatedExtras.find(item => {\r\n            return item.id === this.state.selectedItem.id;\r\n        });\r\n        // If drawing radius -> update it's radius\r\n        if (updatedSelectedItem.type === ExtraType.R) {\r\n            const radius = event.latlng.distanceTo(updatedSelectedItem.position);\r\n            const length = GeoService.calcDistance(\r\n                updatedSelectedItem.position,\r\n                event.latlng\r\n            ).dist;\r\n            updatedSelectedItem = Object.assign(updatedSelectedItem,\r\n                {\r\n                    radius, length,\r\n                });\r\n        }\r\n        // Otherwise => update current position\r\n        else {\r\n            let position = {\r\n                lat: Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                lng: Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH))\r\n            };\r\n            if (this.state.draw.snapping) {\r\n                position = GeoService.getNearestPosition(\r\n                    position, this.state.steps,\r\n                );\r\n            }\r\n            updatedSelectedItem = Object.assign(updatedSelectedItem, {\r\n                position,\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            extras: updatedExtras,\r\n            selectedItem: updatedSelectedItem,\r\n        });\r\n    }\r\n\r\n    onMapClick(event) {\r\n        event.originalEvent.preventDefault();\r\n\r\n        // If no tool selected - do nothing\r\n        if (!this.state.selectedTool) {\r\n            return;\r\n        }\r\n        if (!this.state.draw.isDrawing) {\r\n            // Check with tool type is used (step or extras)\r\n            StepType[this.state.selectedTool.type.description]\r\n                // Handle the event accordinglly\r\n                ? this.handleStepStartDraw(event)\r\n                : this.handleExtrasDraw(event);\r\n        }\r\n        else {\r\n            // Check with tool type is used (step or extras)\r\n            StepType[this.state.selectedTool.type.description]\r\n                // Handle the event accordinglly\r\n                ? this.handleStepStopDraw(event)\r\n                : this.handleExtrasStopDraw(event);\r\n\r\n            this.setState({\r\n                draw: {\r\n                    ...this.state.draw,\r\n                    isDrawing: false,\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStepStartDraw(event) {\r\n        // Create a new step, stating at click position\r\n        let newStep;\r\n        if (this.state.draw.snapping) {\r\n            newStep = geoService.createNewSnappedItem(\r\n                Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH)),\r\n                this.state.selectedTool.type,\r\n                this.leafletMap.getZoom(),\r\n                this.state.steps\r\n            );\r\n        }\r\n        else {\r\n            newStep = geoService.createNewStep(\r\n                Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH)),\r\n                this.state.selectedTool.type,\r\n            );\r\n        }\r\n\r\n        // assing the new line the current tool's options\r\n        Object.assign(newStep, this.state.selectedTool.options);\r\n\r\n        let updatedSteps = [...this.state.steps, newStep];\r\n\r\n        // Mark the new step as the selected step      \r\n        this.setState({\r\n            draw: {\r\n                ...this.state.draw,\r\n                isDrawing: true,\r\n            },\r\n            steps: updatedSteps,\r\n            selectedItem: newStep,\r\n        });\r\n    }\r\n\r\n    handleExtrasDraw(event) {\r\n        // Create a new extra instance, stating at click position\r\n        let newExtra;\r\n        if (this.state.draw.snapping) {\r\n            newExtra = geoService.createNewSnappedItem(\r\n                Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH)),\r\n                this.state.selectedTool.type,\r\n                this.leafletMap.getZoom(),\r\n                this.state.steps\r\n            );\r\n        }\r\n        else {\r\n            newExtra = geoService.createNewExtra(\r\n                Number((event.latlng.lat).toFixed(COOREDINATES_DEPTH)),\r\n                Number((event.latlng.lng).toFixed(COOREDINATES_DEPTH)),\r\n                this.state.selectedTool.type,\r\n            );\r\n        }\r\n        \r\n        // assing the new line the current tool's options\r\n        Object.assign(newExtra, this.state.selectedTool.options);\r\n\r\n        let updatedExtras = [...this.state.extras, newExtra];\r\n\r\n        // Mark the new step as the selected step      \r\n        this.setState({\r\n            draw: {\r\n                ...this.state.draw,\r\n                isDrawing: true,\r\n            },\r\n            extras: updatedExtras,\r\n            selectedItem: newExtra,\r\n        });\r\n    }\r\n\r\n    handleStepStopDraw(event) {\r\n        if (this.state.draw.snapping) {\r\n            // When finished drawing - try finding a near point for ending\r\n            const currentPositions = this.state.selectedItem.positions;\r\n            const updatedStepEnding = GeoService.getNearestPosition(\r\n                currentPositions[1],\r\n                this.state.steps.slice(0, this.state.steps.length - 1),\r\n                [currentPositions[0]] // blacklist snapping to starting point\r\n            );\r\n            this.handleSelectedItemChanges({\r\n                positions: [currentPositions[0], updatedStepEnding]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleExtrasStopDraw(event) {\r\n    }\r\n\r\n    handleRemoveStep(itemId) {\r\n        let updatedItem = this.state.selectedItem;\r\n        let collectionType = StepType[updatedItem.type.description]\r\n            ? \"steps\" : \"extras\";\r\n        let collection = this.state[collectionType];\r\n        // remove deleted item from collection\r\n        let updatedCollection = _.filter(collection, (item) => {\r\n            return item.id !== itemId;\r\n        });\r\n        // unselect deleted item\r\n        let selectedItem = this.state.selectedItem.id !== itemId\r\n            ? this.state.selectedItem : null;\r\n\r\n        let updatedState = {\r\n            selectedItem: selectedItem,\r\n        };\r\n        updatedState[collectionType] = updatedCollection;\r\n        this.setState(updatedState);\r\n    }\r\n\r\n    /* Editor */\r\n\r\n    /**\r\n     * Update the given step with given changes, taking\r\n     * into consideration changes that effect other props.\r\n     * Exp: angle -> end-position.\r\n     * @param {number} updatedStepId \r\n     * @param {NavStepProps} changes \r\n     */\r\n    handleSelectedItemChanges(changes) {\r\n        const updatedItem = this.state.selectedItem;\r\n        const collectionType = StepType[updatedItem.type.description]\r\n            ? \"steps\" : \"extras\";\r\n        let collection = this.state[collectionType];\r\n        let changedItem = _.find(collection, { id: updatedItem.id });\r\n        if (changedItem) {\r\n            // Update item in collection\r\n            Object.assign(changedItem, changes);\r\n        }\r\n\r\n        let updatedState = {\r\n            selectedItem: changedItem,\r\n        };\r\n        updatedState[collectionType] = collection;\r\n        this.setState(updatedState);\r\n    }\r\n\r\n    handleEditorDelete(deletedStepId) {\r\n        // Insert pop up alert here..\r\n        this.handleRemoveStep(deletedStepId);\r\n    }\r\n}\r\n\r\nexport default MapView;","import React, { Component } from 'react';\r\nimport MapView from './map/MapView';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        isInitial: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n        this.handleShow()\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ isInitial: false });\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ isInitial: true });\r\n    }\r\n\r\n    escFunction = (e) => {\r\n        if (e.keyCode === 27) {\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <MapView></MapView>\r\n                <Modal show={this.state.isInitial} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title className=\"initialModalTitle\">Ahoy Captain!</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body className=\"initialModalBody\">\r\n                        <img src={'/icon.png'} alt={''} width=\"300rem\" />\r\n                        <p>Press <b>Esc</b> to start</p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}